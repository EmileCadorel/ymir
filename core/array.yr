extern (C) GC_malloc (ulong) : ptr!(void);

struct Array (T) {
    length : ulong,
    raw : ptr!(int)
}

def opIndex (T, I) (a : Array!(T), id : I) : ref T {
    return (a.raw + (cast:ulong (id) * T.sizeof)).T;
}

def opIndex (T, U) (a : ptr!(T), b : range!(U)) : Array!T {
    return Array!(T) (cast:ulong (b.scd - b.fst), a);
}


def cstArray (len : ulong, size : ubyte) : ptr!(void) {
    let array = GC_malloc (len * size);
    return (len, array).ptr;
}

def opBinary('+', T of [U], U) (a : T, b : T) : T {
    let c = [U ; a.length + b.length];    
    for it in 0U .. a.length
        c [it] = a [it];

    for it in 0U .. b.length
        c [it + a.length] = b [it];

    return c;        
}

def opAssign ("+=", T of [U], U) (ref a : T, b : T) : ref T {
    a = a + b;
    return a;
}
