MODULES =
	$(MODULE amd64.AMDBinop)
	$(MODULE amd64.AMDCall)
	$(MODULE amd64.AMDCast)
	$(MODULE amd64.AMDConst)
	$(MODULE amd64.AMDCvtt)
	$(MODULE amd64.AMDFrame)
	$(MODULE amd64.AMDJumps)
	$(MODULE amd64.AMDLabel)
	$(MODULE amd64.AMDLeaq)
	$(MODULE amd64.AMDLocus)
	$(MODULE amd64.AMDMove)
	$(MODULE amd64.AMDObj)
	$(MODULE amd64.AMDReg)
	$(MODULE amd64.AMDRodata)
	$(MODULE amd64.AMDSet)
	$(MODULE amd64.AMDSize)
	$(MODULE amd64.AMDStd)
	$(MODULE amd64.AMDSysCall)
	$(MODULE amd64.AMDUnop)
	$(MODULE amd64.AMDVisitor)
	$(MODULE app)
	$(MODULE ast.Access)
	$(MODULE ast.Binary)
	$(MODULE ast.Block)
	$(MODULE ast.Break)
	$(MODULE ast.Cast)
	$(MODULE ast.ConstArray)
	$(MODULE ast.ConstRange)
	$(MODULE ast.Constante)
	$(MODULE ast.Declaration)
	$(MODULE ast.Dot)
	$(MODULE ast.Expression)
	$(MODULE ast.For)
	$(MODULE ast.FuncPtr)
	$(MODULE ast.Function)
	$(MODULE ast.If)
	$(MODULE ast.Import)
	$(MODULE ast.Instruction)
	$(MODULE ast.Par)
	$(MODULE ast.ParamList)
	$(MODULE ast.Program)
	$(MODULE ast.Proto)
	$(MODULE ast.Return)
	$(MODULE ast.Struct)
	$(MODULE ast.System)
	$(MODULE ast.Unary)
	$(MODULE ast.Var)
	$(MODULE ast.VarDecl)
	$(MODULE ast.While)
	$(MODULE ast.all)
	$(MODULE lint.LAddr)
	$(MODULE lint.LAlloc)
	$(MODULE lint.LBinop)
	$(MODULE lint.LCall)
	$(MODULE lint.LCast)
	$(MODULE lint.LConst)
	$(MODULE lint.LData)
	$(MODULE lint.LDelete)
	$(MODULE lint.LExp)
	$(MODULE lint.LFrame)
	$(MODULE lint.LFromAddr)
	$(MODULE lint.LGetCall)
	$(MODULE lint.LGoto)
	$(MODULE lint.LInst)
	$(MODULE lint.LInstList)
	$(MODULE lint.LJump)
	$(MODULE lint.LLabel)
	$(MODULE lint.LLocus)
	$(MODULE lint.LMemRead)
	$(MODULE lint.LNop)
	$(MODULE lint.LReg)
	$(MODULE lint.LRegRead)
	$(MODULE lint.LSize)
	$(MODULE lint.LSysCall)
	$(MODULE lint.LUnop)
	$(MODULE lint.LUnref)
	$(MODULE lint.LVisitor)
	$(MODULE lint.LWrite)
	$(MODULE semantic.pack.ExternFrame)
	$(MODULE semantic.pack.Frame)
	$(MODULE semantic.pack.FrameScope)
	$(MODULE semantic.pack.FrameTable)
	$(MODULE semantic.pack.Module)
	$(MODULE semantic.pack.Scope)
	$(MODULE semantic.pack.Symbol)
	$(MODULE semantic.pack.Table)
	$(MODULE semantic.pack.UnPureFrame)
	$(MODULE semantic.types.ArrayInfo)
	$(MODULE semantic.types.ArrayUtils)
	$(MODULE semantic.types.BoolInfo)
	$(MODULE semantic.types.BoolUtils)
	$(MODULE semantic.types.CharInfo)
	$(MODULE semantic.types.CharUtils)
	$(MODULE semantic.types.ClassUtils)
	$(MODULE semantic.types.FloatInfo)
	$(MODULE semantic.types.FloatUtils)
	$(MODULE semantic.types.FunctionInfo)
	$(MODULE semantic.types.InfoType)
	$(MODULE semantic.types.IntInfo)
	$(MODULE semantic.types.IntUtils)
	$(MODULE semantic.types.LongInfo)
	$(MODULE semantic.types.LongUtils)
	$(MODULE semantic.types.NullInfo)
	$(MODULE semantic.types.PtrFuncInfo)
	$(MODULE semantic.types.PtrFuncUtils)
	$(MODULE semantic.types.PtrInfo)
	$(MODULE semantic.types.PtrUtils)
	$(MODULE semantic.types.RangeInfo)
	$(MODULE semantic.types.RangeUtils)
	$(MODULE semantic.types.RefInfo)
	$(MODULE semantic.types.RefUtils)
	$(MODULE semantic.types.StringInfo)
	$(MODULE semantic.types.StringUtils)
	$(MODULE semantic.types.StructInfo)
	$(MODULE semantic.types.StructUtils)
	$(MODULE semantic.types.UndefInfo)
	$(MODULE semantic.types.VoidInfo)
	$(MODULE syntax.Keys)
	$(MODULE syntax.Lexer)
	$(MODULE syntax.SyntaxError)
	$(MODULE syntax.Tokens)
	$(MODULE syntax.Visitor)
	$(MODULE syntax.Word)
	$(MODULE target.TConst)
	$(MODULE target.TExp)
	$(MODULE target.TFrame)
	$(MODULE target.TInst)
	$(MODULE target.TInstList)
	$(MODULE target.TInstPaire)
	$(MODULE target.TLabel)
	$(MODULE target.TReg)
	$(MODULE target.TRodata)
	$(MODULE target.TVisitor)
	$(MODULE utils.Options)
	$(MODULE utils.Singleton)
	$(MODULE utils.Warning)
	$(MODULE utils.YmirException)
	$(MODULE utils.exception)
