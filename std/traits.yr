
def isDecimal (T) () {
    return is (T : int) || is (T : long) || is (T : short) || is (T : byte) ||
	is (T : uint) || is (T : ulong) || is (T : ushort) || is (T : ubyte);
}

def isSigned (T) () {
    return is (T : int) || is (T : long) || is (T : short) || is (T : byte);
}

def isUnsigned (T) () {
    return is (T : uint) || is (T : ulong) || is (T : ushort) || is (T : ubyte);
}

def isPrimitive (T) () {
    return !is (T : string) && !isArray!(T) () && !isTuple!(T) () && !is (T : struct);
}

def binaryFun (op : string, T, T2) () {
    mixin (	   
	   "let ret = (a : "  + T.typeid + ", b : " + T2.typeid + ") =>" + op + "; " +
	   "return ret; "
    );
}

def unaryFun (op : string, T) () {
    mixin (	   
	   "let ret = (a : "  + T.typeid + ") =>" + op + ";" +
	   "return ret; "
    );
}

def unaryFunVoid (op : string, T) () {
    mixin (	   
	   "let ret = (a : "  + T.typeid + ") {\n " + op + ";};" +
	   "return ret; "
    );
}



