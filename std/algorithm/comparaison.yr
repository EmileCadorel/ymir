import std.traits;
import std.algorithm.searching;

def min (T) (a : T, b : T) {
    if (a < b) return a;
    return b;
}

def max if (isDecimal!(T) ())
    (T) (a : T, b : T) {
	if (a < b) return b;
	return a;
    }

def clamp (val, lower, upper) {
    return max (lower, min (upper, val));
}

def isPermutation (T) (const a : [T], const b : [T]) : bool {
    if (a.length != b.length) return false;
    for (it in 0UL .. a.length) {
	if (count (a, a [it]) != count (b, a [it])) return false;
    }
    return true;
}

def isPermutation  (const a : string, const b : string) : bool {
    return isPermutation (a [], b []);
}


