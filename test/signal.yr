import std.map;


struct Signal (T) {
    sig : [fn (T) -> void]    
}

def connect (T...) (ref sig : Signal!T, fun : fn (T) -> void) {
    if sig is null sig = Signal!(T);
    println (sig.sig is null);
    if (sig.sig is null) {        
        sig.sig = [fun];
    } else {
        sig.sig += [fun];
    }

    println (sig.sig.length);
}

def opCall (T) (sig : Signal!T, param : T) {
    for it in sig.sig
        it (param);
}
