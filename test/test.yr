import std.conv;

struct Foo {
    a : int
}

impl Foo {

    def self (self, a : int) {
        self.a = a;
    }
        
    def toString (self) {
        return to!string (self.a);
    }
    
}

struct Foo2 {
    b : int
}

impl Foo for Foo2 {

    def self (self, a : int, b : int) {
        self.super.self (a);
        self.b = b;
    }

    def toString (self) {
        return self.super.toString () + ", " + to!string (self.b);
    }
    
}

struct Foo3 {
    c : int
}

impl Foo2 for Foo3 {

    def new (a : int, b : int, c : int) {
        let ret = Foo3 ();
        ret.super.self (a, b);
        ret.c = c;
        return ret;
    }

    def toString (self) {
        return self.super.toString () + ", " + to!string (self.c);
    }
    
}


def main () {
    let a = Foo3::new (1, 2, 3);
    println (a.toString);
}
