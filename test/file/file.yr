import std.stdio;
import std.math;

extern (C) fopen (name : ptr!char, mode : ptr!char) : ptr!void;
extern (C) fread (buf : ptr!char, size : int, len : int, file : ptr!void) : int;
extern (C) fclose (file : ptr!void);

extern (C) getenv (name : ptr!char) : ptr!char;
extern (C) printf (str : ptr!char, ...); 
extern (C) malloc (size : uint) : ptr!void;
extern (C) free (a : ptr!void);
extern (C) free (a : ptr!char);

def string (a : ptr!char) : string {
    if (a is null) return '';
    else if (*a == 0ub) return ''; 
    let ret = [*a];
    a = a + 1;
    while (*a != 0ub) {
	ret += [*a];
	a = a + 1;
    }
    return cast:string (ret);
}

def main () {
    let a = getenv (("PWD").ptr);
    printf (("%s\n").ptr, a);

    let file = fopen (("Makefile").ptr, ("r").ptr);

    let str = cast:ptr!(char) (malloc (1024u * char.sizeof));
    let len = fread (str, 1, 1024, file);
    let real = string (str);
    println (real);
    
    free (str);
    fclose (file);
    
}



